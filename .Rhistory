?iris
iris[1:10]
iris[1:10.]
??histogram
iris[1:10,]
?'for'
iris$
d
hist(iris$Sepal.Length)
hist(iris$Sepal.Width)
hist(iris$Petal.Length)
hist(iris$Petal.Width)
d
xVec <- sample(0:999, 250, replace=T)
yVec <- sample(0:999, 250, replace=T)
n <- (2:250)
y[n]-x[n-1]
xVec <- sample(0:999, 250, replace=T)> yVec <- sample(0:999, 250, replace=T)
xVec <- sample(0:999, 250, replace=T)
yVec <- sample(0:999, 250, replace=T)
n <- (2:250)
yVec(n)-xVec(n-1)
y[n]-x[n-1]
y[n]-x[n-1]
(y[n]-x[n-1])
c(yVec(2:250)-xVec(1:249))
> y <- yVec
> y[n]-x[n-1]
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
> x <- xVec
> y <- yVec
> y[n]-x[n-1]
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
y[n]-x[n-1]
sin(y[n-1])/cos(x[n])
sin(y[n-1])/cos(x[n])
```
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- 2:250
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- 2:250
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
x[n-2]+2x[n-1]-x[n]
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
sin(y[n-1])/cos(x[n])
C(x[n-2]+2x[n-1]-x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
c(sin(y[n-1])/cos(x[n]))
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
c(sin(y[n-1])/cos(x[n]))
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (2:250)
x <- xVec
y <- yVec
c(sin(y[n-1])/cos(x[n]))
c(x[n-2]+2x[n-1]-x[n])
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (3:250)
x <- xVec
y <- yVec
x[n-2]+2x[n-1]-x[n]
> xVec <- sample(0:999, 250, replace=T)
> yVec <- sample(0:999, 250, replace=T)
> n <- (3:250)
x <- xVec
y <- yVec
x[n-2]+2*x[n-1]-x[n]
yVec(n)-xVec(n-1)
n <- (2:250)
i <- (1:n-1)
n <- (2:250)
i <- [1:n-1]
n <- (2:250)
i <- [n-1]
?print.data.frame
?diamond
d
?diamond
library("grid", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("ggplot2")
install.packages("knitr")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data"diamond"
data "diamond"
data"diamond"
data("diamond")
?diamonds
?data.frame
??attribute
data.frame(diamonds)
data.frame(diamonds)
nrow(diamonds)
data.frame(diamonds)
nrow(diamonds)
ncol(diamonds)
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
head(diamonds)
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
head(diamonds)
colnames(diamonds)
rownames(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds,sep="\n"))
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds,sep = "\n"))
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds,sep="\n"))
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds),sep="\n")
typeof(colnames(diamonds))
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds),sep="\n") #print name of column one per line
typeof(colnames(diamonds))
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds),sep="\n") #print name of column one per line
typeof(col(diamonds))
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds),sep="\n") #print name of column one per line
typeof(colnames(diamonds))
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds),sep="\n") #print name of column one per line
typeof(column(diamonds))
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds),sep="\n") #print name of column one per line
lapply(col(diamonds), class)
data.frame(diamonds)
nrow(diamonds) #how many rows are in the dataframe
ncol(diamonds) #how many columns are in the dataframe
colnames(diamonds) #extract column names
cat(colnames(diamonds),sep="\n") #print name of column one per line
class(col(diamonds))
lapply(diamonds,class)
